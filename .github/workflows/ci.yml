# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v2
      
      - name: Docker Setup QEMU
        # You may pin to the exact commit or the version.
        # uses: docker/setup-qemu-action@6520a2d2cb6db42c90c297c8025839c98e531268
        uses: docker/setup-qemu-action@v1.0.1
        id: qemu
        with:
          # QEMU static binaries Docker image (e.g. tonistiigi/binfmt:latest)
          #image: # optional, default is tonistiigi/binfmt:latest
          # Platforms to install (e.g. arm64,riscv64,arm)
          platforms: 386,amd64,arm/v6,arm/v7,arm64,ppc64le,s390x # optional, default is all
          
      - name: Available platforms
        run: echo ${{ steps.qemu.outputs.platforms }}
          
      - name: Docker Setup Buildx
        # You may pin to the exact commit or the version.
        # uses: docker/setup-buildx-action@154c24e1f33dbb5865a021c99f1318cfebf27b32
        uses: docker/setup-buildx-action@v1.1.1
        with:
          # Buildx version. (eg. v0.3.0)
          #version: # optional
          # Sets the builder driver to be used
          #driver: # optional, default is docker-container
          # List of additional driver-specific options. (eg. image=moby/buildkit:master)
          #driver-opts: # optional
          # Flags for buildkitd daemon
          #buildkitd-flags: # optional, default is --allow-insecure-entitlement security.insecure --allow-insecure-entitlement network.host
          # Sets up docker build command as an alias to docker buildx
          install: true # optional, default is false
          # Switch to this builder instance
          #use: # optional, default is true
          # Optional address for docker socket or context from `docker context ls`
          #endpoint: # optional
          
      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@f3364599c6aa293cdc2b8391b1b56d0c30e45c8a
        uses: docker/login-action@v1.8.0
        with:
          # Server address of Docker registry. If not set then will default to Docker Hub
          #registry: # optional
          # Username used to log against the Docker registry
          username: ${{ secrets.DOCKER_USER }} # optional
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.DOCKER_PASSWORD }} # optional
          # Log out from the Docker registry at the end of a job
          #logout: # optional, default is true
      - name: Build and push Docker images
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@9379083e426e2e84abb80c8c091f5cdeb7d3fd7a
        uses: docker/build-push-action@v2.3.0
        with:
          # Builder instance
          #builder: # optional
          # Build's context is the set of files located in the specified PATH or URL
          #context: # optional
          # Path to the Dockerfile
          #file: # optional
          # List of build-time variables
          #build-args: # optional
          # List of metadata for an image
          #labels: # optional
          # List of tags
          tags: ${{ secrets.DOCKER_USER }}/xray-gateway:latest # optional
          # Always attempt to pull a newer version of the image
          #pull: # optional, default is false
          # Sets the target stage to build
          #target: # optional
          # List of extra privileged entitlement (eg. network.host,security.insecure)
          #allow: # optional
          # Do not use cache when building the image
          #no-cache: # optional, default is false
          # List of target platforms for build
          platforms: ${{ steps.qemu.outputs.platforms }} # optional
          # Load is a shorthand for --output=type=docker
          #load: # optional, default is false
          # Push is a shorthand for --output=type=registry
          push: true # optional, default is false
          # List of output destinations (format: type=local,dest=path)
          #outputs: # optional
          # List of external cache sources for buildx (eg. user/app:cache, type=local,src=path/to/dir)
          #cache-from: # optional
          # List of cache export destinations for buildx (eg. user/app:cache, type=local,dest=path/to/dir)
          #cache-to: # optional
          # List of secrets to expose to the build (eg. key=string, GIT_AUTH_TOKEN=mytoken)
          #secrets: # optional
          # List of secret files to expose to the build (eg. key=filename, MY_SECRET=./secret.txt)
          #secret-files: # optional
          # List of SSH agent socket or keys to expose to the build
          #ssh: # optional
          # GitHub Token used to authenticate against a repository for Git context
          #github-token: # optional, default is ${{ github.token }}
